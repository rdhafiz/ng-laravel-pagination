{"version":3,"sources":["../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.service.ts","../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.component.ts","../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.module.ts"],"names":["Injectable","args","providedIn","NgLaravelPaginationComponent","this","data","changePage","EventEmitter","prototype","ngOnChanges","changes","undefined","console","log","currentValue","toArray","num","Array","fill","map","x","i","prevPage","current_page","page","changePagination","nextPage","last_page","emit","Component","selector","template","Input","Output","NgModule","declarations","imports","CommonModule","BrowserModule","exports"],"mappings":"4wBAOE,4HALDA,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECQV,SAAAC,IAHSC,KAAAC,KAAY,KACXD,KAAAE,WAAa,IAAIC,EAAAA,oBAK3BJ,EAAAK,UAAAC,YAAA,SAAYC,QAEaC,IAAjBD,EAAQL,MACRO,QAAQC,IAAIH,EAAQL,KAAKS,eAIjCX,EAAAK,UAAAO,QAAA,SAAQC,GACJ,OAAQC,MAAMD,GAAKE,KAAK,MAAMC,KAAI,SAACC,EAAIC,GAAM,OAAAA,EAAI,MAGrDlB,EAAAK,UAAAc,SAAA,WACI,GAAIlB,KAAKC,KAAKkB,aAAe,EAAG,CAC5B,IAAMC,EAAOpB,KAAKC,KAAKkB,aAAe,EACtCnB,KAAKqB,iBAAiBD,KAI9BrB,EAAAK,UAAAkB,SAAA,WACI,GAAItB,KAAKC,KAAKkB,aAAe,GAAKnB,KAAKC,KAAKkB,aAAenB,KAAKC,KAAKsB,UAAW,CAC5E,IAAMH,EAAOpB,KAAKC,KAAKkB,aAAe,EACtCnB,KAAKqB,iBAAiBD,KAI9BrB,EAAAK,UAAAiB,iBAAA,SAAiBD,GACbpB,KAAKE,WAAWsB,KAAK,CAACJ,KAAIA,8BAtCjCK,EAAAA,UAAS5B,KAAA,CAAC,CACP6B,SAAU,wBACVC,SAAA,8hDAICC,EAAAA,0BACAC,EAAAA,gBCKL,iCAPCC,EAAAA,SAAQjC,KAAA,CAAC,CACRkC,aAAc,CAAChC,GACfiC,QAAS,CACLC,EAAAA,aAAcC,EAAAA,eAElBC,QAAS,CAACpC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgLaravelPaginationService {\n\n  constructor() { }\n}\n","import {Component, Output, Input, SimpleChanges, EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'ng-laravel-pagination',\n    templateUrl: './ng-laravel-pagination.component.html',\n    styleUrls: ['./ng-laravel-pagination.component.css']\n})\nexport class NgLaravelPaginationComponent {\n    @Input() data: any = null;\n    @Output() changePage = new EventEmitter<any>();\n\n    constructor() {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const THIS = this;\n        if (changes.data !== undefined) {\n            console.log(changes.data.currentValue);\n        }\n    }\n\n    toArray(num): any {\n        return  Array(num).fill(null).map((x , i) => i + 1);\n    }\n\n    prevPage(): void {\n        if (this.data.current_page > 1) {\n            const page = this.data.current_page - 1;\n            this.changePagination(page);\n        }\n    }\n\n    nextPage(): void {\n        if (this.data.current_page > 0 && this.data.current_page < this.data.last_page) {\n            const page = this.data.current_page + 1;\n            this.changePagination(page);\n        }\n    }\n\n    changePagination(page): void {\n        this.changePage.emit({page});\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgLaravelPaginationComponent } from './ng-laravel-pagination.component';\n\n\n\n@NgModule({\n  declarations: [NgLaravelPaginationComponent],\n  imports: [\n      CommonModule, BrowserModule\n  ],\n  exports: [NgLaravelPaginationComponent]\n})\nexport class NgLaravelPaginationModule { }\n"]}