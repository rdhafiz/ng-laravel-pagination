{"version":3,"file":"ng-laravel-pagination.js","sources":["../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.service.ts","../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.component.ts","../../../projects/ng-laravel-pagination/src/lib/ng-laravel-pagination.module.ts","../../../projects/ng-laravel-pagination/src/public-api.ts","../../../projects/ng-laravel-pagination/src/ng-laravel-pagination.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgLaravelPaginationService {\n\n  constructor() { }\n}\n","import {Component, Output, Input, SimpleChanges, EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'ng-laravel-pagination',\n    templateUrl: './ng-laravel-pagination.component.html',\n    styleUrls: ['./ng-laravel-pagination.component.css']\n})\nexport class NgLaravelPaginationComponent {\n    @Input() data: any = null;\n    @Output() changePage = new EventEmitter<any>();\n\n    constructor() {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const THIS = this;\n        if (changes.data !== undefined) {\n            console.log(changes.data.currentValue);\n        }\n    }\n\n    toArray(num): any {\n        return  Array(num).fill(null).map((x , i) => i + 1);\n    }\n\n    prevPage(): void {\n        if (this.data.current_page > 1) {\n            const page = this.data.current_page - 1;\n            this.changePagination(page);\n        }\n    }\n\n    nextPage(): void {\n        if (this.data.current_page > 0 && this.data.current_page < this.data.last_page) {\n            const page = this.data.current_page + 1;\n            this.changePagination(page);\n        }\n    }\n\n    changePagination(page): void {\n        this.changePage.emit({page});\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgLaravelPaginationComponent } from './ng-laravel-pagination.component';\n\n\n\n@NgModule({\n  declarations: [NgLaravelPaginationComponent],\n  imports: [\n      CommonModule, BrowserModule\n  ],\n  exports: [NgLaravelPaginationComponent]\n})\nexport class NgLaravelPaginationModule { }\n","/*\n * Public API Surface of ng-laravel-pagination\n */\n\nexport * from './lib/ng-laravel-pagination.service';\nexport * from './lib/ng-laravel-pagination.component';\nexport * from './lib/ng-laravel-pagination.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAKa,0BAA0B;IAErC,iBAAiB;;;;YALlB,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;MCGY,4BAA4B;IAIrC;QAHS,SAAI,GAAQ,IAAI,CAAC;QAChB,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;KAG9C;IAED,WAAW,CAAC,OAAsB;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC1C;KACJ;IAED,OAAO,CAAC,GAAG;QACP,OAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KACvD;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;YAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;KACJ;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAC5E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;KACJ;IAED,gBAAgB,CAAC,IAAI;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC;KAChC;;;YAvCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,+qBAAqD;;aAExD;;;;mBAEI,KAAK;yBACL,MAAM;;;MCKE,yBAAyB;;;YAPrC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,4BAA4B,CAAC;gBAC5C,OAAO,EAAE;oBACL,YAAY,EAAE,aAAa;iBAC9B;gBACD,OAAO,EAAE,CAAC,4BAA4B,CAAC;aACxC;;;ACbD;;;;ACAA;;;;;;"}